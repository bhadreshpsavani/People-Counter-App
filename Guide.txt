SSD:
#Download pre-trained model from Tensorflow or Caffe
# Under /opt/intel/openvino/deployment_tools/model_optimizer/
python3 -m pip install -r requirements_tf.txt

# Convert tf model to Intel Inference Engine Representation:
python3 mo_tf.py --input_model=model/ssd_mobilenet_v1_coco_2018_01_28/frozen_inference_graph.pb --transformations_config /opt/intel/openvino_2020.2.120/deployment_tools/model_optimizer/extensions/front/tf/ssd_v2_support.json --tensorflow_object_detection_api_pipeline_config model/ssd_mobilenet_v1_coco_2018_01_28/pipeline.config --reverse_input_channels -o mo_model/

#Yolo
git clone https://github.com/mystic123/tensorflow-yolo-v3.git
cd tensorflow-yolo-v3
git checkout ed60b90
wget https://raw.githubusercontent.com/pjreddie/darknet/master/data/coco.names > coco.names
mv coco.names.1 coco.names
wget https://pjreddie.com/media/files/yolov3-tiny.weights
python3 convert_weights_pb.py --class_names coco.names --data_format NHWC --weights_file yolov3-tiny.weights --tiny
# o/p: frozen_darknet_yolov3_model.pb. will be generated.
python3 /opt/intel/openvino/deployment_tools/model_optimizer/mo_tf.py --input_model frozen_darknet_yolov3_model.pb --tensorflow_use_custom_operations_config /opt/intel/openvino/deployment_tools/model_optimizer/extensions/front/tf/yolo_v3_tiny.json --batch 1